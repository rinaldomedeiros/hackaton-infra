#!/usr/bin/env bash
set -euo pipefail

# Determina automaticamente onde est√° este script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
K8S_DIR="$SCRIPT_DIR/../k8s"

echo "‚è≥ Iniciando Minikube..."
minikube start
minikube addons enable metrics-server

echo "‚è≥ Carregando imagem da aplica√ß√£o no Minikube..."
minikube image load hackaton-producer-myapp:latest

# 1Ô∏è‚É£ Deploy do PostgreSQL
echo "üöÄ Aplicando manifests do PostgreSQL..."
kubectl apply -f "$K8S_DIR/postgres"
echo "‚è≥ Aguardando Postgres ficar Ready..."
kubectl --request-timeout=0 rollout status deployment/postgres-deployment --timeout=120s

# 2Ô∏è‚É£ Deploy do Zookeeper
echo "üöÄ Aplicando manifests do Zookeeper..."
kubectl apply -f "$K8S_DIR/kafka/zookeeper-deployment.yml" \
               -f "$K8S_DIR/kafka/zookeeper-service.yml"
echo "‚è≥ Aguardando Pod do Zookeeper ficar Ready (at√© 5m)..."
kubectl --request-timeout=0 wait \
  --for=condition=ready pod -l app=kafka,component=zookeeper \
  --timeout=300s

# 3Ô∏è‚É£ Deploy do Kafka Broker
echo "üöÄ Aplicando manifests do Kafka broker..."
kubectl apply -f "$K8S_DIR/kafka/kafka-deployment.yml" \
               -f "$K8S_DIR/kafka/kafka-service.yml"
echo "‚è≥ Aguardando Pod do Kafka broker ficar Ready (at√© 5m)..."
kubectl --request-timeout=0 wait \
  --for=condition=ready pod -l app=kafka,component=broker \
  --timeout=300s

# 4Ô∏è‚É£ Deploy da aplica√ß√£o
echo "üöÄ Aplicando manifests da aplica√ß√£o MyApp..."
kubectl apply -f "$K8S_DIR/myapp"
echo "‚è≥ Aguardando MyApp ficar Ready..."
kubectl --request-timeout=0 rollout status deployment/myapp-deployment --timeout=120s

# 5Ô∏è‚É£ Resumo final
echo
kubectl get pods,svc,hpa
echo
echo "‚úÖ Deploy completo! Acesse em: http://$(minikube ip):30080"
